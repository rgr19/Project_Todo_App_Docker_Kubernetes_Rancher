version: "2.2"

services:
  todo-rabbitmq:
    container_name: todo-rabbitmq
    image: rabbitmq:3.7.13-management
    ports:
      - 5672:5672
      - 8081:15672
    environment:
      - RABBITMQ_DEFAULT_USER=todo
      - RABBITMQ_DEFAULT_PASS=todo1234

  todo-redis:
    container_name: todo-redis
    image: redis:5.0.3
    ports:
      - 6379:6379

  todo-postgres:
    container_name: todo-postgres
    build:
      context: ../../../src/todo-postgres
      dockerfile: Dockerfile.prod
    image: todo-postgres:dev
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username todo" ]
      interval: 5s
      timeout: 180s
      retries: 10
    environment:
      - POSTGRES_HOST=todo-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=todo
      - POSTGRES_USER=todo
      - POSTGRES_PASSWORD=todo1234

  todo-elastic:
    container_name: todo-elastic
    image: elasticsearch:6.6.1
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
    volumes:
      - elastic-data:/usr/share/elasticsearch/data

  todo-cache-ingestion:
    container_name: todo-cache-ingestion
    build:
      context: ../../../src/todo-cache-ingestion
      dockerfile: ../common/Dockerfile.nodejs.prod
    image: todo-cache-ingestion:dev
    command: sh /app/start.sh
    environment:
      - REDIS_HOST=todo-redis
      - REDIS_PORT=6379
      - RABBITMQ_DEFAULT_USER=todo
      - RABBITMQ_DEFAULT_PASS=todo1234
      - RABBITMQ_URL=amqp://todo:todo1234@todo-rabbitmq
      - STORAGE_SERVICE_URL=http://todo-storage-service:3000
    depends_on:
      - todo-redis
      - todo-rabbitmq

  todo-cache-service:
    container_name: todo-cache-service
    build:
      context: ../../../src/todo-cache-service
      dockerfile: ../common/Dockerfile.nodejs.prod
    image: todo-cache-service:dev
    ports:
      - 3001:3000
    environment:
      - REDIS_HOST=todo-redis
      - REDIS_PORT=6379
    depends_on:
      - todo-redis

  todo-search-ingestion:
    container_name: todo-search-ingestion
    build:
      context: ../../../src/todo-search-ingestion
      dockerfile: ../common/Dockerfile.nodejs.prod
    image: todo-search-ingestion:dev
    command: sh /app/start.sh
    environment:
      - ELASTICSEARCH_HOST=todo-elastic
      - ELASTICSEARCH_PORT=9200
      - RABBITMQ_URL=amqp://todo:todo1234@todo-rabbitmq
      - RABBITMQ_DEFAULT_USER=todo
      - RABBITMQ_DEFAULT_PASS=todo1234
    depends_on:
      - todo-elastic
      - todo-rabbitmq

  todo-search-service:
    container_name: todo-search-service
    build:
      context: ../../../src/todo-search-service
      dockerfile: ../common/Dockerfile.nodejs.prod
    image: todo-search-service:dev
    command: sh /app/start.sh
    ports:
      - 3002:3000
    environment:
      - ELASTICSEARCH_HOST=todo-elastic
      - ELASTICSEARCH_PORT=9200
    depends_on:
      - todo-elastic

  todo-storage-ingestion:
    container_name: todo-storage-ingestion
    build:
      context: ../../../src/todo-storage-ingestion
      dockerfile: ../common/Dockerfile.nodejs.prod
    image: todo-storage-ingestion:dev
    command: sh /app/start.sh
    environment:
      - POSTGRES_HOST=todo-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=todo
      - POSTGRES_USER=todo
      - POSTGRES_PASSWORD=todo1234
      - RABBITMQ_DEFAULT_USER=todo
      - RABBITMQ_DEFAULT_PASS=todo1234
      - RABBITMQ_URL=amqp://todo:todo1234@todo-rabbitmq
    depends_on:
      - todo-postgres
      - todo-rabbitmq

  todo-storage-service:
    container_name: todo-storage-service
    build:
      context: ../../../src/todo-storage-service
      dockerfile: ../common/Dockerfile.nodejs.prod
    image: todo-storage-service:dev
    ports:
      - 3003:3000
    environment:
      - POSTGRES_HOST=todo-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=todo
      - POSTGRES_USER=todo
      - POSTGRES_PASSWORD=todo1234
    depends_on:
      - todo-postgres

  todo-api-gateway:
    container_name: todo-api-gateway
    build:
      context: ../../../src/todo-api-gateway
      dockerfile: ../common/Dockerfile.nodejs.prod
    image: todo-api-gateway:dev
    command: sh /app/start.sh
    ports:
      - 3000:3000
    environment:
      - RABBITMQ_DEFAULT_USER=todo
      - RABBITMQ_DEFAULT_PASS=todo1234
      - RABBITMQ_URL=amqp://todo:todo1234@todo-rabbitmq
      - CACHE_SERVICE_URL=http://todo-cache-service:3000
      - SEARCH_SERVICE_URL=http://todo-search-service:3000
      - STORAGE_SERVICE_URL=http://todo-storage-service:3000
    depends_on:
      - todo-cache-service
      - todo-cache-ingestion
      - todo-search-service
      - todo-search-ingestion
      - todo-storage-service
      - todo-storage-ingestion
      - todo-rabbitmq

  todo-view:
    container_name: todo-view
    build:
      context: ../../../src/todo-view
      dockerfile: Dockerfile.prod
    image: todo-view:dev
    ports:
      - 4200:4200
    volumes:
      - ../../../src/todo-view:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - todo-api-gateway

  todo-proxy:
    container_name: todo-proxy
    build:
      context: ../../../src/todo-proxy
      dockerfile: Dockerfile.prod
    image: todo-proxy:dev
    ports:
      - 8080:80
    depends_on:
      - todo-api-gateway
      - todo-view

volumes:
  postgres-data:
  elastic-data:
