version: "3"

services:
  todo-redis:
    container_name: todo-redis
    image: redis:5.0.3
    ports:
      - 6379:6379
    restart: unless-stopped

  todo-postgres:
    container_name: todo-postgres
    image: postgres:11.2
    build:
      context: ./todo-postgres
      dockerfile: Dockerfile.dev
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=todo
      - POSTGRES_USER=todo
      - POSTGRES_DB=todo
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username todo" ]
      interval: 10s
      timeout: 5s
      retries: 5

  todo-elastic:
    container_name: todo-elastic
    image: elasticsearch:6.6.1
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
    volumes:
      - elastic-data:/usr/share/elasticsearch/data

  todo-api:
    container_name: todo-api
    image: todo-api:1.0
    build:
      dockerfile: Dockerfile.dev
      context: ./todo-api
    command: sh /app/start.sh
    ports:
      - 3000:3000
    environment:
      - POSTGRES_HOST=todo-postgres
      - POSTGRES_PASSWORD=todo
      - POSTGRES_USER=todo
      - POSTGRES_PORT=5432
      - POSTGRES_DB=todo
      - REDIS_HOST=todo-redis
      - REDIS_PORT=6379
      - ELASTICSEARCH_HOST=todo-elastic
      - ELASTICSEARCH_PORT=9200
    volumes:
      - /app/node_modules
    depends_on: # it will try to start those service as first, but they will be not ready - it require additional health checks
      - todo-redis
      - todo-elastic
      - todo-postgres
      # Only for version 2.1, removed in 3
      #todo-redis:
      #  condition: service_started
      #todo-elastic:
      #  condition: service_started
      #todo-postgres:
      #  condition: service_healthy

  todo-flask:
    container_name: todo-flask
    image: docker-flask
    build:
      dockerfile: Dockerfile.dev
      context: ./todo-flask
    ports:
      - '5000:5000'
    healthcheck:
      test: curl --fail -s http://localhost:5000/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3

  todo-view:
    container_name: todo-view
    image: todo-view:1.0
    build:
      dockerfile: Dockerfile.dev
      context: ./todo-view
    ports:
      - 4200:4200
    volumes:
      - ./todo-view:/usr/src/app
      - /usr/scr/app/node_modules
    depends_on:
      - todo-api
      - todo-flask

  todo-proxy:
    container_name: todo-proxy
    image: todo-proxy:1.0
    build:
      dockerfile: Dockerfile.dev
      context: ./todo-proxy
    ports:
      - 8080:80
    depends_on:
      - todo-flask
      - todo-api
      - todo-view


volumes:
    postgres-data:
    elastic-data: